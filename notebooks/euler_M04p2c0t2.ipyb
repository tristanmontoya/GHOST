{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-12-29T17:36:53.241432Z",
     "iopub.status.busy": "2020-12-29T17:36:53.240186Z",
     "iopub.status.idle": "2020-12-29T17:36:53.243888Z",
     "shell.execute_reply": "2020-12-29T17:36:53.243118Z"
    },
    "papermill": {
     "duration": 0.022565,
     "end_time": "2020-12-29T17:36:53.244088",
     "exception": false,
     "start_time": "2020-12-29T17:36:53.221523",
     "status": "completed"
    },
    "tags": [
     "parameters"
    ]
   },
   "outputs": [],
   "source": [
    "mach_number=0.4\n",
    "p=2\n",
    "M=11\n",
    "L=10.0\n",
    "p_geo=2\n",
    "c=\"c_dg\"\n",
    "discretization_type=1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-12-29T17:36:53.259767Z",
     "iopub.status.busy": "2020-12-29T17:36:53.258940Z",
     "iopub.status.idle": "2020-12-29T17:36:53.262708Z",
     "shell.execute_reply": "2020-12-29T17:36:53.261203Z"
    },
    "papermill": {
     "duration": 0.013305,
     "end_time": "2020-12-29T17:36:53.262893",
     "exception": false,
     "start_time": "2020-12-29T17:36:53.249588",
     "status": "completed"
    },
    "tags": [
     "injected-parameters"
    ]
   },
   "outputs": [],
   "source": [
    "# Parameters\n",
    "mach_number = 0.4\n",
    "p = 2\n",
    "p_geo = 2\n",
    "c = \"c_dg\"\n",
    "discretization_type = 2\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2020-12-29T17:36:53.279572Z",
     "iopub.status.busy": "2020-12-29T17:36:53.278648Z"
    },
    "papermill": {
     "duration": 11.608401,
     "end_time": "2020-12-29T17:37:04.875855",
     "exception": false,
     "start_time": "2020-12-29T17:36:53.267454",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:root:msh4 requires 3D points, but 2D points given. Appending 0 third component.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING:root:Binary Gmsh needs c_size_t (got int64). Converting.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "mach number:  0.4\n",
      "grid points:  11\n",
      "geometry degree:  2\n",
      "correction:  c_dg\n",
      "discretization type:  2\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Exception in thread Thread-4:\n",
      "Traceback (most recent call last):\n",
      "  File \"/home/tristan/anaconda3/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\n",
      "    self.run()\n",
      "  File \"/home/tristan/anaconda3/lib/python3.6/threading.py\", line 864, in run\n",
      "    self._target(*self._args, **self._kwargs)\n",
      "  File \"../src/Solver.py\", line 384, in run\n",
      "    prefix=prefix)\n",
      "TypeError: run() missing 1 required positional argument: 'print_interval'\n",
      "\n",
      "Exception in thread Thread-5:\n",
      "Traceback (most recent call last):\n",
      "  File \"/home/tristan/anaconda3/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\n",
      "    self.run()\n",
      "  File \"/home/tristan/anaconda3/lib/python3.6/threading.py\", line 864, in run\n",
      "    self._target(*self._args, **self._kwargs)\n",
      "  File \"../src/Solver.py\", line 384, in run\n",
      "    prefix=prefix)\n",
      "TypeError: run() missing 1 required positional argument: 'print_interval'\n",
      "\n"
     ]
    }
   ],
   "source": [
    "import sys  \n",
    "sys.path.insert(0, '../src')\n",
    "from Driver import euler_driver\n",
    "\n",
    "print(\"mach number: \", mach_number)\n",
    "print(\"grid points: \", M)\n",
    "print(\"geometry degree: \", p_geo)\n",
    "print(\"correction: \", c)\n",
    "print(\"discretization type: \", discretization_type)\n",
    "\n",
    "strong, weak = euler_driver(mach_number=mach_number, \n",
    "                            p=p, M=M, L=L,\n",
    "                            p_geo=p_geo, c=c, \n",
    "                            discretization_type=discretization_type)"
   ]
  }
 ],
 "metadata": {
  "celltoolbar": "Tags",
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 13.584553,
   "end_time": "2020-12-29T17:37:05.980186",
   "environment_variables": {},
   "exception": null,
   "input_path": "euler_driver.ipynb",
   "output_path": "euler_M04p2c0t2.ipyb",
   "parameters": {
    "c": "c_dg",
    "discretization_type": 2,
    "mach_number": 0.4,
    "p": 2,
    "p_geo": 2
   },
   "start_time": "2020-12-29T17:36:52.395633",
   "version": "2.2.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}